#!/usr/bin/php
<?php

/*
 * https://coderwall.com/p/ew-_jg/git-commit-message-redmine
 * Validates if the commit message contains a Redmine issue ID
 * ...and display some informations when validated
 * configuration :
 *     git config redmine.host "https://redmine.exemple.com"
 *     git config redmine.host "0123456789101112131415"
*/

$message = strtok(file_get_contents($argv[1]), "\n");
$issueId = getIssueId($message);
displayIssue($issueId);

exit(0);


/**
 * Get the issue ID
 * if no issue ID found exit the script
 *
 * @param string $message
 *
 * @return string The issue ID
 */
function getIssueId($message)
{
    $regex        = "/([0-9]+)+( |-){1}/";
    $errorMessage = decorateLine("Commit need to be \"ID - message\"", 41);

    if (!preg_match($regex, $message, $matches)) {
        echo $errorMessage;

        exit(1);
    }

    return $matches[1];
}

/**
 * Display information about the issue
 * if no issue found exit the script
 *
 * @param string $issueId
 */
function displayIssue($issueId)
{
    $redmineHost        = exec('git config redmine.host');
    $redmineApikey      = exec('git config redmine.apikey');
    $issueUrl           = sprintf('%s/issues/%s', $redmineHost, $issueId);
    $curlErrorMessage   = decorateLine('Please enable cURL before trying to commit.', 41);
    $issueErrorMessage  = decorateLine(sprintf("The issue #%s cannot be found with the URL %s.", $issueId, $issueUrl), 41);
    $issueErrorMessage .= decorateLine('Check your redmine.host and redmine.apikey values.', 41);

    if (!function_exists('curl_version')) {
        echo $curlErrorMessage;

        exit(1);
    }

    $curl = curl_init();
    curl_setopt($curl, CURLOPT_URL, $issueUrl . '.json');
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($curl, CURLOPT_HTTPHEADER, [
        'Content-Type: application/json',
        'X-Redmine-API-Key: ' . $redmineApikey
    ]);
    $curlResponse = curl_exec($curl);
    curl_close($curl);

    $issue = json_decode($curlResponse, true);

    if (!$issue) {
        echo $issueErrorMessage;

        exit(1);
    }

    // Displaying Redmine issue info
    echo "\n";
    echo "\nIssue ===========================";
    echo "\n  refs:        " . $issueUrl;
    echo "\n  number:      " . $issueId;
    echo "\n  title:       " . $issue['issue']['subject'];
    echo "\n  status:      " . $issue['issue']['status']['name'];
    echo "\n  priority:    " . $issue['issue']['priority']['name'];
    echo "\n  created by:  " . $issue['issue']['author']['name'];
    echo "\n  assigned to: " . $issue['issue']['assigned_to']['name'];
    echo "\n\n";
}

/**
 * Decorate astring for console output
 *
 * @param string  $line
 * @param integer $colorCode
 *
 * @return string
 */
function decorateLine($line, $colorCode)
{
    return sprintf("\33[%sm%s\33[0m\n", $colorCode, $line);
}
